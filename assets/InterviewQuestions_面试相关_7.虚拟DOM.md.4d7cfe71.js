import{_ as a,o as l,c as e,Q as i}from"./chunks/framework.84f90f1e.js";const D=JSON.parse('{"title":"虚拟 DOM","description":"","frontmatter":{},"headers":[],"relativePath":"InterviewQuestions/面试相关/7.虚拟DOM.md","filePath":"InterviewQuestions/面试相关/7.虚拟DOM.md"}'),o={name:"InterviewQuestions/面试相关/7.虚拟DOM.md"},t=i('<h1 id="虚拟-dom" tabindex="-1">虚拟 DOM <a class="header-anchor" href="#虚拟-dom" aria-label="Permalink to &quot;虚拟 DOM&quot;">​</a></h1><h2 id="虚拟-dom-的工作原理是什么" tabindex="-1">虚拟 DOM 的工作原理是什么？ <a class="header-anchor" href="#虚拟-dom-的工作原理是什么" aria-label="Permalink to &quot;虚拟 DOM 的工作原理是什么？&quot;">​</a></h2><ul><li>讲概念：通过 JS 对象模拟 DOM 节点，</li><li>说用途：在 FaceBook 初期考虑提高代码抽象能力，避免人为的操作 dom，降低代码风险的因素所以引入了虚拟 DOM</li><li>理思路：通过工具转换成，需要的 DOM 树</li><li>列优缺点：</li><li>核心问题：</li></ul><h2 id="初衷" tabindex="-1">初衷 <a class="header-anchor" href="#初衷" aria-label="Permalink to &quot;初衷&quot;">​</a></h2><ul><li>FaceBook 创建 XHP 项目，</li></ul><ol><li>简化前端开发：为了后端赋能，让后端开发人员能够快速交付页面</li><li>避免跨站点的脚本攻击：</li></ol><p>总结：通过虚拟 DOM 规避风险</p><h2 id="关键函数" tabindex="-1">关键函数 <a class="header-anchor" href="#关键函数" aria-label="Permalink to &quot;关键函数&quot;">​</a></h2><ul><li>diff 函数： 计算状态变更前后的虚拟 DOM 树的差异</li><li>render 函数：渲染整个虚拟 DOM 树或者处理差异点</li></ul><h2 id="优劣势" tabindex="-1">优劣势 <a class="header-anchor" href="#优劣势" aria-label="Permalink to &quot;优劣势&quot;">​</a></h2><ul><li><p>优势：</p><ol><li>大量的直接操作 DOM 容易引起网络性能下降。虚拟 Dom 可以降低 DOM 的操作范围和频次，提升页面性能</li><li>跨平台的成本更低</li></ol></li><li><p>劣势：</p><ol><li>内存占用较高</li><li>无法做到极致优化</li></ol></li></ul>',11),r=[t];function n(s,d,c,h,_,u){return l(),e("div",null,r)}const O=a(o,[["render",n]]);export{D as __pageData,O as default};
