import{_ as s,o as n,c as t,Q as a}from"./chunks/framework.ef8e9df1.js";const h=JSON.parse('{"title":"fs-extra","description":"","frontmatter":{},"headers":[],"relativePath":"home/每日工具库/5.fs-extra.md","filePath":"home/每日工具库/5.fs-extra.md","lastUpdated":1701487068000}'),o={name:"home/每日工具库/5.fs-extra.md"},e=a(`<h1 id="fs-extra" tabindex="-1">fs-extra <a class="header-anchor" href="#fs-extra" aria-label="Permalink to &quot;fs-extra&quot;">​</a></h1><h2 id="官方说明" tabindex="-1">官方说明 <a class="header-anchor" href="#官方说明" aria-label="Permalink to &quot;官方说明&quot;">​</a></h2><ul><li>fs-extra adds file system methods that aren&#39;t included in the native fs module and adds promise support to the fs methods. It also uses graceful-fs to prevent EMFILE errors. It should be a drop in replacement for fs.</li><li>fs-extra 添加了原生 fs 模块中未包含的文件系统方法，并为 fs 方法添加了 Promise 支持。它还使用 Graceful-fs 来防止 EMFILE 错误。是 fs 的替代品</li><li>目的是为了解决 mkdirp, rimraf, and ncp 在项目中经常使用的问题</li></ul><h2 id="优势" tabindex="-1">优势 <a class="header-anchor" href="#优势" aria-label="Permalink to &quot;优势&quot;">​</a></h2><ul><li>解决了很多判空的问题</li></ul><h2 id="案例" tabindex="-1">案例 <a class="header-anchor" href="#案例" aria-label="Permalink to &quot;案例&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> fs </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;fs-extra&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Async with promises:</span></span>
<span class="line"><span style="color:#E1E4E8;">fs.</span><span style="color:#B392F0;">copy</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./home/AI&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;./tmp/mynewfile&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  .</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;success!&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">  .</span><span style="color:#B392F0;">catch</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">err</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(err));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 同步拷贝</span></span>
<span class="line"><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  fs.</span><span style="color:#B392F0;">copySync</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;./home/AI&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;./tmp/copySync/mynewfile&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;success!&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (err) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(err);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> fs </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;fs-extra&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Async with promises:</span></span>
<span class="line"><span style="color:#24292E;">fs.</span><span style="color:#6F42C1;">copy</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;./home/AI&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;./tmp/mynewfile&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  .</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;success!&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">  .</span><span style="color:#6F42C1;">catch</span><span style="color:#24292E;">((</span><span style="color:#E36209;">err</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">error</span><span style="color:#24292E;">(err));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 同步拷贝</span></span>
<span class="line"><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  fs.</span><span style="color:#6F42C1;">copySync</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;./home/AI&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;./tmp/copySync/mynewfile&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;success!&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (err) {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">error</span><span style="color:#24292E;">(err);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="其他方法说明" tabindex="-1">其他方法说明 <a class="header-anchor" href="#其他方法说明" aria-label="Permalink to &quot;其他方法说明&quot;">​</a></h2><table><thead><tr><th>方法名</th><th>功能描述</th><th>示例代码</th></tr></thead><tbody><tr><td>copySync</td><td>同步复制文件或目录</td><td><code>fs.copySync(&#39;source.txt&#39;, &#39;destination.txt&#39;);</code></td></tr><tr><td>emptyDirSync</td><td>同步清空目录</td><td><code>fs.emptyDirSync(&#39;path/to/directory&#39;);</code></td></tr><tr><td>ensureFileSync</td><td>确保文件存在，如果不存在则创建空文件</td><td><code>fs.ensureFileSync(&#39;path/to/file&#39;);</code></td></tr><tr><td>ensureDirSync</td><td>确保目录存在，如果不存在则创建目录</td><td><code>fs.ensureDirSync(&#39;path/to/directory&#39;);</code></td></tr><tr><td>ensureLinkSync</td><td>确保符号链接存在，如果不存在则创建符号链接</td><td><code>fs.ensureLinkSync(&#39;source&#39;, &#39;destination&#39;);</code></td></tr><tr><td>ensureSymlinkSync</td><td>确保符号链接存在，如果不存在则创建符号链接</td><td><code>fs.ensureSymlinkSync(&#39;source&#39;, &#39;destination&#39;);</code></td></tr><tr><td>mkdirpSync</td><td>同步递归创建目录</td><td><code>fs.mkdirpSync(&#39;path/to/directory&#39;);</code></td></tr><tr><td>mkdirsSync</td><td>同步递归创建目录</td><td><code>fs.mkdirsSync(&#39;path/to/directory&#39;);</code></td></tr><tr><td>moveSync</td><td>同步移动文件或目录</td><td><code>fs.moveSync(&#39;source.txt&#39;, &#39;destination.txt&#39;);</code></td></tr><tr><td>outputFileSync</td><td>同步写入文件的内容</td><td><code>fs.outputFileSync(&#39;path/to/file&#39;, &#39;File content&#39;);</code></td></tr><tr><td>outputJsonSync</td><td>同步写入 JSON 格式的数据到文件</td><td><code>fs.outputJsonSync(&#39;path/to/file.json&#39;, data);</code></td></tr><tr><td>pathExistsSync</td><td>同步判断文件或目录是否存在</td><td><code>const exists = fs.pathExistsSync(&#39;path/to/fileOrDirectory&#39;);</code></td></tr><tr><td>readJsonSync</td><td>同步读取 JSON 格式的文件内容</td><td><code>const data = fs.readJsonSync(&#39;path/to/file.json&#39;);</code></td></tr><tr><td>removeSync</td><td>同步删除文件或目录</td><td><code>fs.removeSync(&#39;path/to/file&#39;);</code><br><code>fs.removeSync(&#39;path/to/directory&#39;);</code></td></tr><tr><td>writeJsonSync</td><td>同步写入 JSON 格式的数据到文件</td><td><code>fs.writeJsonSync(&#39;path/to/file.json&#39;, data);</code></td></tr></tbody></table>`,9),l=[e];function p(c,r,d,y,i,E){return n(),t("div",null,l)}const f=s(o,[["render",p]]);export{h as __pageData,f as default};
