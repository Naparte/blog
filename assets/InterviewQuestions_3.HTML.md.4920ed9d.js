import{_ as e,o as a,c as t,Q as l}from"./chunks/framework.84f90f1e.js";const m=JSON.parse('{"title":"HTML 问题","description":"","frontmatter":{},"headers":[],"relativePath":"InterviewQuestions/3.HTML.md","filePath":"InterviewQuestions/3.HTML.md","lastUpdated":1702561582000}'),s={name:"InterviewQuestions/3.HTML.md"},o=l('<h1 id="html-问题" tabindex="-1">HTML 问题 <a class="header-anchor" href="#html-问题" aria-label="Permalink to &quot;HTML 问题&quot;">​</a></h1><h2 id="doctype-文档类型-的作用是什么" tabindex="-1">doctype(文档类型) 的作用是什么？ <a class="header-anchor" href="#doctype-文档类型-的作用是什么" aria-label="Permalink to &quot;doctype(文档类型) 的作用是什么？&quot;">​</a></h2><ul><li>What does a doctype do?</li></ul><p>文档类型声明（DOCTYPE）是一条位于 HTML 文档开头的指令，用于告知 Web 浏览器使用哪种 HTML 或 XHTML 规范来解释页面内容。具体来说，DOCTYPE 的作用包括以下几个方面：</p><ul><li>触发标准模式：DOCTYPE 帮助浏览器确定要使用的渲染模式。在标准模式下，浏览器会按照规范的方式解释和渲染页面，确保页面在不同浏览器中呈现一致。</li><li>确保向后兼容性：通过指定正确的文档类型，可以确保旧版本的浏览器能够正确地解释和显示页面内容，从而提供向后兼容性。</li><li>指定文档类型：DOCTYPE 告知浏览器使用的是哪种 HTML 或 XHTML 规范，例如 HTML 4.01、XHTML 1.0 或 HTML5。这有助于浏览器正确解释文档中使用的标记和语法。</li><li>影响浏览器行为：不同的文档类型声明可能会影响浏览器的解释和渲染行为，例如在怪异模式下（Quirks Mode）或混杂模式下，浏览器可能会采用不同的渲染规则。</li></ul><p>总之，DOCTYPE 的主要作用是指示浏览器使用哪种规范来解释和渲染页面内容，以确保页面在不同浏览器中以一致的方式呈现，并提供向后兼容性。</p><p><a href="https://html.spec.whatwg.org/multipage/syntax.html#the-doctype" target="_blank" rel="noreferrer">doctype 参考文献</a></p><h2 id="如果网页内容需要支持多语言-你会怎么做" tabindex="-1">如果网页内容需要支持多语言，你会怎么做？ <a class="header-anchor" href="#如果网页内容需要支持多语言-你会怎么做" aria-label="Permalink to &quot;如果网页内容需要支持多语言，你会怎么做？&quot;">​</a></h2><ul><li>How do you serve a page with content in multiple languages?</li></ul><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;"></span></span>\n<span class="line"><span style="color:#e1e4e8;">当向服务器发出 HTTP 请求时，发出请求的用户代理通常会发送有关语言首选项的信息，例如 Accept-Language 标头中的信息。然后，如果有这样的替代方案，服务器可以使用此信息以适当的语言返回文档的版本。返回的HTML文档还应该在&lt;html&gt;标签中声明lang属性，例如&lt;html lang=&quot;en&quot;&gt;...&lt;/html&gt;。</span></span>\n<span class="line"><span style="color:#e1e4e8;"></span></span>\n<span class="line"><span style="color:#e1e4e8;">为了让搜索引擎知道相同的内容可以用不同的语言提供，应该使用带有 rel=&quot;alternate&quot; 和 hreflang=&quot;...&quot; 属性的 &lt;link&gt; 标签。例如。 &lt;link rel=&quot;alternate&quot; hreflang=&quot;de&quot; href=&quot;http://de.example.com/page.html&quot; /&gt;。</span></span>\n<span class="line"><span style="color:#e1e4e8;"></span></span>\n<span class="line"><span style="color:#e1e4e8;">渲染</span></span>\n<span class="line"><span style="color:#e1e4e8;">服务器端渲染：HTML 标记将包含字符串占位符，并且将从代码或翻译服务的配置中获取特定语言的内容。然后，服务器动态生成包含该特定语言内容的 HTML 页面。</span></span>\n<span class="line"><span style="color:#e1e4e8;">客户端渲染：将获取适当的区域设置字符串并将其与基于 JavaScript 的视图结合起来。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;"></span></span>\n<span class="line"><span style="color:#24292e;">当向服务器发出 HTTP 请求时，发出请求的用户代理通常会发送有关语言首选项的信息，例如 Accept-Language 标头中的信息。然后，如果有这样的替代方案，服务器可以使用此信息以适当的语言返回文档的版本。返回的HTML文档还应该在&lt;html&gt;标签中声明lang属性，例如&lt;html lang=&quot;en&quot;&gt;...&lt;/html&gt;。</span></span>\n<span class="line"><span style="color:#24292e;"></span></span>\n<span class="line"><span style="color:#24292e;">为了让搜索引擎知道相同的内容可以用不同的语言提供，应该使用带有 rel=&quot;alternate&quot; 和 hreflang=&quot;...&quot; 属性的 &lt;link&gt; 标签。例如。 &lt;link rel=&quot;alternate&quot; hreflang=&quot;de&quot; href=&quot;http://de.example.com/page.html&quot; /&gt;。</span></span>\n<span class="line"><span style="color:#24292e;"></span></span>\n<span class="line"><span style="color:#24292e;">渲染</span></span>\n<span class="line"><span style="color:#24292e;">服务器端渲染：HTML 标记将包含字符串占位符，并且将从代码或翻译服务的配置中获取特定语言的内容。然后，服务器动态生成包含该特定语言内容的 HTML 页面。</span></span>\n<span class="line"><span style="color:#24292e;">客户端渲染：将获取适当的区域设置字符串并将其与基于 JavaScript 的视图结合起来。</span></span></code></pre></div><h2 id="在设计和开发多语言网站时-有哪些问题你必须要考虑" tabindex="-1">在设计和开发多语言网站时，有哪些问题你必须要考虑？ <a class="header-anchor" href="#在设计和开发多语言网站时-有哪些问题你必须要考虑" aria-label="Permalink to &quot;在设计和开发多语言网站时，有哪些问题你必须要考虑？&quot;">​</a></h2><ul><li>What kind of things must you be wary of when designing or developing for multilingual sites?</li></ul><h2 id="使用-data-属性的好处是什么" tabindex="-1">使用 data- 属性的好处是什么？ <a class="header-anchor" href="#使用-data-属性的好处是什么" aria-label="Permalink to &quot;使用 data- 属性的好处是什么？&quot;">​</a></h2><ul><li>What are data- attributes good for?</li></ul><h2 id="如果把-html5-看作做一个开放平台-那它的构建模块有哪些" tabindex="-1">如果把 HTML5 看作做一个开放平台，那它的构建模块有哪些？ <a class="header-anchor" href="#如果把-html5-看作做一个开放平台-那它的构建模块有哪些" aria-label="Permalink to &quot;如果把 HTML5 看作做一个开放平台，那它的构建模块有哪些？&quot;">​</a></h2><ul><li>Consider HTML5 as an open web platform. What are the building blocks of HTML5?</li></ul><h2 id="请描述-cookies、sessionstorage-和-localstorage-的区别。" tabindex="-1">请描述 cookies、sessionStorage 和 localStorage 的区别。 <a class="header-anchor" href="#请描述-cookies、sessionstorage-和-localstorage-的区别。" aria-label="Permalink to &quot;请描述 cookies、sessionStorage 和 localStorage 的区别。&quot;">​</a></h2><ul><li>Describe the difference between a cookie, sessionStorage and localStorage.</li></ul><h2 id="请解释-script-、-script-async-和-script-defer-的区别。" tabindex="-1">请解释 <code>&lt;script&gt;</code>、<code>&lt;script async&gt;</code> 和 <code>&lt;script defer&gt;</code> 的区别。 <a class="header-anchor" href="#请解释-script-、-script-async-和-script-defer-的区别。" aria-label="Permalink to &quot;请解释 `&lt;script&gt;`、`&lt;script async&gt;` 和 `&lt;script defer&gt;` 的区别。&quot;">​</a></h2><ul><li>Describe the difference between <code>&lt;script&gt;,</code> <code>&lt;script async&gt;</code> and <code>&lt;script defer&gt;</code>.</li></ul><h2 id="为什么通常推荐将-css-link-放置在-head-head-之间-而将-js-script-放置在-body-之前-你知道有哪些例外吗" tabindex="-1">为什么通常推荐将 CSS <code>&lt;link&gt;</code> 放置在 <code>&lt;head&gt;&lt;/head&gt;</code> 之间，而将 JS <code>&lt;script&gt;</code> 放置在 <code>&lt;/body&gt;</code> 之前？你知道有哪些例外吗？ <a class="header-anchor" href="#为什么通常推荐将-css-link-放置在-head-head-之间-而将-js-script-放置在-body-之前-你知道有哪些例外吗" aria-label="Permalink to &quot;为什么通常推荐将 CSS `&lt;link&gt;` 放置在 `&lt;head&gt;&lt;/head&gt;` 之间，而将 JS `&lt;script&gt;` 放置在 `&lt;/body&gt;` 之前？你知道有哪些例外吗？&quot;">​</a></h2><ul><li>Why is it generally a good idea to position CSS<code> &lt;link&gt;</code>s between <code>&lt;head&gt;&lt;/head&gt;</code> and JS <code>&lt;script&gt;</code>s just before <code>&lt;/body&gt;</code>? Do you know any exceptions?</li></ul><h2 id="什么是渐进式渲染-progressive-rendering" tabindex="-1">什么是渐进式渲染 (progressive rendering)？ <a class="header-anchor" href="#什么是渐进式渲染-progressive-rendering" aria-label="Permalink to &quot;什么是渐进式渲染 (progressive rendering)？&quot;">​</a></h2><ul><li>What is progressive rendering?</li></ul><h2 id="你用过哪些不同的-html-模板语言" tabindex="-1">你用过哪些不同的 HTML 模板语言？ <a class="header-anchor" href="#你用过哪些不同的-html-模板语言" aria-label="Permalink to &quot;你用过哪些不同的 HTML 模板语言？&quot;">​</a></h2><ul><li>Have you used different HTML templating languages before?</li></ul><h2 id="参考文献" tabindex="-1">参考文献 <a class="header-anchor" href="#参考文献" aria-label="Permalink to &quot;参考文献&quot;">​</a></h2><ul><li><a href="https://www.frontendinterviewhandbook.com/zh/html-questions/" target="_blank" rel="noreferrer">https://www.frontendinterviewhandbook.com/zh/html-questions/</a></li></ul>',28),n=[o];function r(i,c,d,p,h,u){return a(),t("div",null,n)}const f=e(s,[["render",r]]);export{m as __pageData,f as default};
