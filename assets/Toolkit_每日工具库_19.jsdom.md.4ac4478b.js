import{_ as s,o as a,c as o,Q as l}from"./chunks/framework.84f90f1e.js";const h=JSON.parse('{"title":"jsdom","description":"","frontmatter":{},"headers":[],"relativePath":"Toolkit/每日工具库/19.jsdom.md","filePath":"Toolkit/每日工具库/19.jsdom.md","lastUpdated":1703562455000}'),n={name:"Toolkit/每日工具库/19.jsdom.md"},p=l(`<h1 id="jsdom" tabindex="-1">jsdom <a class="header-anchor" href="#jsdom" aria-label="Permalink to &quot;jsdom&quot;">​</a></h1><h2 id="jsdom-是什么" tabindex="-1">jsdom 是什么？ <a class="header-anchor" href="#jsdom-是什么" aria-label="Permalink to &quot;jsdom 是什么？&quot;">​</a></h2><ul><li>是许多 Web 标准的纯 JavaScript 实现，特别是 WHATWG DOM 和 HTML 标准，可与 Node.js 一起使用。一般来说，该项目的目标是模拟足够多的 Web 浏览器子集，以用于测试和抓取真实世界的 Web 应用程序。</li></ul><h2 id="jsdom-解决了什么问题" tabindex="-1">jsdom 解决了什么问题 <a class="header-anchor" href="#jsdom-解决了什么问题" aria-label="Permalink to &quot;jsdom 解决了什么问题&quot;">​</a></h2><ul><li>jsdom 解决了在服务器端运行和测试前端代码时缺乏 DOM 环境的问题。在传统的 Node.js 环境中，没有浏览器的 DOM API，这使得一些依赖于 DOM 操作的前端代码无法在服务器端运行或进行测试。jsdom 提供了一个虚拟的 DOM 环境，使得开发人员可以在服务器端运行和测试前端代码，而无需依赖真实的浏览器环境。</li></ul><h2 id="jsdom-的功能和特点" tabindex="-1">jsdom 的功能和特点 <a class="header-anchor" href="#jsdom-的功能和特点" aria-label="Permalink to &quot;jsdom 的功能和特点&quot;">​</a></h2><ul><li>模拟浏览器的 DOM 环境：jsdom 提供了一个完整的 DOM API，包括节点操作、事件处理、样式计算等功能，使得前端代码可以在服务器端运行和测试。</li><li>支持 HTML5 标准：jsdom 支持解析和处理 HTML5 标准，包括处理自定义元素、Web Components 等。</li><li>可扩展性：jsdom 允许开发人员通过插件机制扩展其功能，例如添加自定义的 DOM API 或修改默认行为。</li><li>轻量级：jsdom 是一个轻量级的库，易于安装和使用。</li></ul><h2 id="示例" tabindex="-1">示例： <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例：&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">JSDOM</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;jsdom&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">html</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;&lt;html&gt;&lt;body&gt;&lt;div id=&quot;myDiv&quot;&gt;Hello, jsdom!&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">dom</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">JSDOM</span><span style="color:#E1E4E8;">(html);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">document</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> dom.window.document;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">myDiv</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;myDiv&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(myDiv.textContent); </span><span style="color:#6A737D;">// 输出：Hello, jsdom!</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">JSDOM</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;jsdom&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">html</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&lt;html&gt;&lt;body&gt;&lt;div id=&quot;myDiv&quot;&gt;Hello, jsdom!&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">dom</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">JSDOM</span><span style="color:#24292E;">(html);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">document</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> dom.window.document;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">myDiv</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;myDiv&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(myDiv.textContent); </span><span style="color:#6A737D;">// 输出：Hello, jsdom!</span></span></code></pre></div><h2 id="参考文献" tabindex="-1">参考文献 <a class="header-anchor" href="#参考文献" aria-label="Permalink to &quot;参考文献&quot;">​</a></h2><ul><li><a href="https://github.com/jsdom/jsdom" target="_blank" rel="noreferrer">https://github.com/jsdom/jsdom</a></li></ul>`,11),t=[p];function e(c,r,y,d,i,E){return a(),o("div",null,t)}const u=s(n,[["render",e]]);export{h as __pageData,u as default};
